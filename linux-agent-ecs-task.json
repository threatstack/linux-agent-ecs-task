{
  "ipcMode": null,
  "executionRoleArn": "<Enter Task Execution Role ARN>",
  "containerDefinitions": [
    {
      "dnsSearchDomains": null,
      "environmentFiles": null,
      "logConfiguration": null,
      "entryPoint": [
        "bash",
        "-c"
      ],
      "portMappings": [],
      "command": [
        "chroot /threatstackfs /bin/bash -c \"service auditd stop\"; eval tsagent setup $THREATSTACK_SETUP_ARGS; eval tsagent config --set $THREATSTACK_CONFIG_ARGS; exec /opt/threatstack/sbin/tsagentd --logstdout=1"
      ],
      "linuxParameters": {
        "capabilities": {
          "add": [
            "AUDIT_CONTROL",
            "SYS_ADMIN",
            "SYS_NICE",
            "SYS_PTRACE"
          ],
          "drop": null
        },
        "sharedMemorySize": null,
        "tmpfs": null,
        "devices": null,
        "maxSwap": null,
        "swappiness": null,
        "initProcessEnabled": null
      },
      "cpu": 400,
      "environment": [
        {
          "name": "THREATSTACK_CONFIG_ARGS",
          "value": "enable_containers 1"
        },
        {
          "name": "THREATSTACK_SETUP_ARGS",
          "value": "--deploy-key <Enter Deploy Key> --ruleset '<Enter Rule Sets>'"
        }
      ],
      "resourceRequirements": null,
      "ulimits": null,
      "dnsServers": null,
      "mountPoints": [
        {
          "readOnly": true,
          "containerPath": "/run/containerd/containerd.sock",
          "sourceVolume": "containerdsocket"
        },
        {
          "readOnly": true,
          "containerPath": "/var/run/docker/containerd/docker-containerd.sock",
          "sourceVolume": "oldcontainerdsocket"
        },
        {
          "readOnly": true,
          "containerPath": "/var/run/docker.sock",
          "sourceVolume": "dockersocket"
        },
        {
          "readOnly": true,
          "containerPath": "/threatstackfs",
          "sourceVolume": "hostfs"
        }
      ],
      "workingDirectory": null,
      "secrets": null,
      "dockerSecurityOptions": null,
      "memory": 512,
      "memoryReservation": null,
      "volumesFrom": [],
      "stopTimeout": null,
      "image": "threatstack/ts-docker2:latest",
      "startTimeout": null,
      "firelensConfiguration": null,
      "dependsOn": null,
      "disableNetworking": null,
      "interactive": null,
      "healthCheck": {
        "retries": 5,
        "command": [
          "CMD-SHELL",
          "exit $(/opt/threatstack/bin/tsagent status | grep -c DOWN)"
        ],
        "timeout": 5,
        "interval": 60,
        "startPeriod": 30
      },
      "essential": true,
      "links": null,
      "hostname": null,
      "extraHosts": null,
      "pseudoTerminal": null,
      "user": null,
      "readonlyRootFilesystem": null,
      "dockerLabels": null,
      "systemControls": null,
      "privileged": false,
      "name": "ts-docker2"
    }
  ],
  "placementConstraints": [],
  "memory": "512",
  "taskRoleArn": "<Enter Task Role ARN>",
  "family": "threatstack-agent",
  "pidMode": "host",
  "requiresCompatibilities": [
    "EC2"
  ],
  "networkMode": "host",
  "cpu": "400",
  "inferenceAccelerators": null,
  "proxyConfiguration": null,
  "volumes": [
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": null,
      "name": "hostfs",
      "host": {
        "sourcePath": "/"
      },
      "dockerVolumeConfiguration": null
    },
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": null,
      "name": "dockersocket",
      "host": {
        "sourcePath": "/var/run/docker.sock"
      },
      "dockerVolumeConfiguration": null
    },
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": null,
      "name": "containerdsocket",
      "host": {
        "sourcePath": "/run/containerd/containerd.sock"
      },
      "dockerVolumeConfiguration": null
    },
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": null,
      "name": "oldcontainerdsocket",
      "host": {
        "sourcePath": "/var/run/docker/containerd/containerd.sock"
      },
      "dockerVolumeConfiguration": null
    }
  ]
}